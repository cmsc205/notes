# Define circumference() here
deck <- as.vector(outer(c("A",2:10,"J","Q","K"), c("\u2660","\u2665","\u2666", "\u2663"), paste0))
deck
# Define deal() here
deal(deck, n = 5)
deck <- as.vector(outer(c("A",2:10,"J","Q","K"), c("\u2660","\u2665","\u2666", "\u2663"), paste0))
deck
deck <- as.vector(outer(c("A",2:10,"J","Q","K"), c("\u2660","\u2665","\u2666", "\u2663"), paste0))
deck
deal(deck, n = 5)
N <- 20   # set total wealth
p <- 0.5  # set prob. A wins a bet
i <- 10   # A's initial wealth
bets <- 0 # initializing no. of bets
while(i > 0 & (N - i) > 0) {
bets <- bets + 1
outcome <- rbinom(1, n = 1, p = p)
if (outcome == 1) {
i <- i + 1
} else {
i <- i - 1
}
}
bets
# Load the libraries
library(tidyverse)
library(readr)
# Read in the data sets
sf2016 <- read_csv("https://github.com/cmsc205/notes/raw/master/day11/sf2016.csv")
# Take a random sample from the population
our_sample <- sf2016 %>%
sample_n(size = 500)
# Below is the code for bootstrapping the sample median
B <- 5000 # No. of bootstrap statsistics desired
n <- nrow(our_sample)
medians <- numeric(length = B) # Place to store the stats
for(b in 1:B) {
boot_sample <- sample(our_sample$TotalCompensation,
size = n,
replace = TRUE)
medians[b] <- median(boot_sample)
}
boot_medians <- bootstrap1(sf2016$TotalCompensation, stat = median, B = 5000)
# Define the bootstrap1() function here
# Define bootstrap_mean() here
# Define bootstrap_median() here
ggplot(data = data.frame(bets = our_sim), aes(x = bets)) +
geom_histogram(color = "gray20", binwidth = 20)
mean(our_sim)
our_sim <- replicate(n = 1000, expr = gamblers_ruin(N = 20, p = .5, i = 10))
# Define gamblers_ruin() here
deal(deck)
# Alter deal() so that n = 5 by default
deal(deck, n = 5)
library("CarletonStats", lib.loc="~/Library/R/3.3/library")
install.packages("resample")
library(resample)
?resample
head(sf2016)
summary(sf2016)
table(sf2016$Department)
table(sf2016$OrganizationGroup)
?boot
View(sf2016)
