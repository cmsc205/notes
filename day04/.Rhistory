x2 <- data.frame(x2=c(runif(5000), runif(5000, max=3)))
ggplot(data = x2, aes(x = x2, y = ..density..)) +
geom_histogram(binwidth=.5)
x2 <- data.frame(x2=c(runif(5000), runif(5000, max=3)))
ggplot(data = x2, aes(x = x2, y = ..density..)) +
geom_histogram(binwidth=.5)
hist(x2$x2)
hist(x2$x2)
hist(x2$x2)
hist(x2$x2)
hist(x2$x2)
x2 <- data.frame(c(runif(50), runif(50, max=3))
hist(x2)
x2 <- c(runif(50), runif(50, max=3))
hist(x2)
hist(x1$x1)
?hist
x2 <- c(runif(50), runif(50, max=3))
hist(x2)
x2 <- c(runif(50), runif(50, max=3))
hist(x2)
x2 <- c(runif(50), runif(50, max=3))
hist(x2)
x2 <- c(runif(50), runif(50, max=3))
hist(x2)
x2 <- c(runif(50), runif(50, max=3))
hist(x2)
x2 <- c(runif(50), runif(50, max=3))
hist(x2)
x2 <- c(runif(50), runif(50, max=3))
hist(x2)
x2 <- c(runif(50), runif(50, max=3))
ggplot(data = data.frame(x2 = x2), aes(x = x2, y = ..density..)) +
geom_histogram(binwidth=.5)
ggplot(data = data.frame(x2 = x2), aes(x = x2, y = ..density..)) +
geom_histogram(binwidth=.5, origin = 0)
ggplot(data = data.frame(x2 = x2), aes(x = x2, y = ..density..)) +
geom_histogram(binwidth=.5, origin = 0)
x2 <- c(runif(50), runif(50, max=3))
hist(x2)
ggplot(data = data.frame(x2 = x2), aes(x = x2, y = ..density..)) +
geom_histogram(binwidth=.5, origin = 0)
ggplot(data = tips, aes(x = tip, y = ..density..)) +
geom_histogram(binwidth = .1)
histmdl(tips$tip, precision = 1/100)
ggplot(data = tips, aes(x = tip, y = ..density..)) +
geom_histogram(binwidth = .25)
histmdl(tips$tip, precision = 1/100)
ggplot(data = tips, aes(x = tip, y = ..density..)) +
geom_histogram(binwidth = .25, origin = 0)
histmdl(tips$tip, precision = 1/100)
ls()
library(ISLR)
?Auto
?Carseats
Boston
boston
library(car)
?`car-package`
scatterplotMatrix(~ income + education + prestige | type, data=Duncan)
scatterplotMatrix(~ income + education + prestige, data=Duncan)
snow <- read.table("http://www.public.iastate.edu/~pdixon/stat500/data/snow1.txt", header = TRUE)
ggplot(data = snow, mapping = aes(x = density, y = gain)) +
geom_point()
library(ggplot2)
ggplot(data = snow, mapping = aes(x = density, y = gain)) +
geom_point()
library(alr4)
head(ftcollinssnow)
head(ftcollinstemp)
library(ggplot2)
ggplot(data = ftcollinstemp, mapping = aes(x = fall, y = winter)) +
geom_point()
library(ggplot2)
ggplot(data = ftcollinstemp, mapping = aes(x = fall, y = winter)) +
geom_point() + geom_smooth()
lm(gain~density, data = snow)
snow.lm <- lm(gain ~ density, data = snow)
snow.lm$coefficients
summary(snow.lm)
predict(snow.lm, newdata = data.frame(density = 0.2))
fortcollinstemp
early <- subset(ftcollinstemp, )
early <- subset(ftcollinstemp, year < 1990)
late <- subset(ftcollinstemp, year >= 1990)
install.packages(c("ggplot2", "rmarkdown"))
# Chunk 1
library(DataComputing)
library(mosaicData)
library(ggthemes)
knitr::opts_chunk$set(tidy=FALSE, message=FALSE)
# Chunk 3
load("../Projects/CollegeScoreCard/ScorecardSmall.Rda")
# Chunk 4
Translate <- read.file("http://tiny.cc/dcf/NPT4-names.csv")
Narrow <-
ScorecardSmall %>%
filter( ! CCSIZSET %in% c(1,6,7,8),
ADM_RATE < 1,
CONTROL != 3) %>%
select(ADM_RATE, CONTROL,
NPT41_PUB, NPT43_PUB, NPT45_PUB,
NPT41_PRIV, NPT43_PRIV, NPT45_PRIV) %>%
gather(value = net_cost, key=income_group,
NPT41_PUB, NPT43_PUB, NPT45_PUB,
NPT41_PRIV, NPT43_PRIV, NPT45_PRIV) %>%
left_join(Translate, by=c("income_group" = "long_name")) %>%
mutate(CONTROL = ifelse(CONTROL==1, "Public", "Private"))
install.packages("DataComputing")
library(tidyverse)
?labs
p <- ggplot(mtcars, aes(mpg, wt, colour = cyl)) + geom_point()
p
library(bayesm)
states
?datasets
sessionInfo()
library(mosaicData)
?mosaicData
help(package="mosaicData")
library(openintro)
?openintro
?labs
States
?datasets
state
states
state.area %>%
ggplot(aes(x = state.name, y = state.area)) +
geom_point()
state.area %>%
ggplot(aes(x = state.name, y = state.area)) +
geom_point()
str(state.area)
?openintro
str(state.x77)
states <- as.data.frame(state.x77)
states %>%
ggplot(aes(x = state.name, y = state.area)) +
geom_point()
states %>%
ggplot(aes(x = state.name, y = state.area)) +
geom_point() +
coord_flip
states %>%
ggplot(aes(x = state.name, y = state.area)) +
geom_point() +
coord_flip()
p <- states %>%
ggplot(aes(x = state.name, y = state.area)) +
geom_point() +
coord_flip()
p
?forcats
library(forcats)
?forcats
help(package=forcats)
str(states)
states
install.packages("fivethirtyeight")
install.packages("DataComputing")
devtools::install_github("DataComputing/DataComputing")
library("fivethirtyeight", lib.loc="~/Library/R/3.3/library")
head(college_all_ages)
flights
library(dplyr)
flights
data(flights)
library(nycflights)
library(nycflights13)
install.packages("nycflights13")
?fivenum
?fiventhirtyeight
help(package=fiventhirtyeight)
install.packages("tufte")
download.file("http://tiny.cc/dcf/ScorecardSmall.Rda", destfile = "ScorecardSmall.Rda")
dir()
load("../Projects/CollegeScoreCard/ScorecardSmall.Rda")
load("ScorecardSmall.Rda")
dir()
setwd("~/Dropbox/cmsc205/notes/day04")
load("ScorecardSmall.Rda")
write.csv(ScorecardSmall, "ScorecardSmall.csv", row.names = FALSE)
# Chunk 1
library(DataComputing)
library(mosaicData)
library(ggthemes)
knitr::opts_chunk$set(tidy=FALSE, message=FALSE)
# Chunk 3
load("ScorecardSmall.Rda")
Translate <- read.file("http://tiny.cc/dcf/NPT4-names.csv")
Narrow <-
ScorecardSmall %>%
filter( ! CCSIZSET %in% c(1,6,7,8),
ADM_RATE < 1,
CONTROL != 3) %>%
select(ADM_RATE, CONTROL,
NPT41_PUB, NPT43_PUB, NPT45_PUB,
NPT41_PRIV, NPT43_PRIV, NPT45_PRIV) %>%
gather(value = net_cost, key=income_group,
NPT41_PUB, NPT43_PUB, NPT45_PUB,
NPT41_PRIV, NPT43_PRIV, NPT45_PRIV) %>%
left_join(Translate, by=c("income_group" = "long_name")) %>%
mutate(CONTROL = ifelse(CONTROL==1, "Public", "Private"))
library(tidyr)
install.packages("tibble")
install.packages("tidyr")
library(tidyr)
# Chunk 1
library(DataComputing)
library(mosaicData)
library(ggthemes)
knitr::opts_chunk$set(tidy=FALSE, message=FALSE)
# Chunk 3
load("ScorecardSmall.Rda")
# Chunk 4
Translate <- read.file("http://tiny.cc/dcf/NPT4-names.csv")
Narrow <-
ScorecardSmall %>%
filter( ! CCSIZSET %in% c(1,6,7,8),
ADM_RATE < 1,
CONTROL != 3) %>%
select(ADM_RATE, CONTROL,
NPT41_PUB, NPT43_PUB, NPT45_PUB,
NPT41_PRIV, NPT43_PRIV, NPT45_PRIV) %>%
gather(value = net_cost, key=income_group,
NPT41_PUB, NPT43_PUB, NPT45_PUB,
NPT41_PRIV, NPT43_PRIV, NPT45_PRIV) %>%
left_join(Translate, by=c("income_group" = "long_name")) %>%
mutate(CONTROL = ifelse(CONTROL==1, "Public", "Private"))
write.csv(Narrow, "ScorecardSmallNarrow.csv", row.names=FALSE)
head(Narrow)
Narrrow <- select(Narrow, -income_group)
head(Narrow)
Narrow <- select(Narrow, -income_group)
head(Narrow)
?rename
colnames(Narrow)[4]
colnames(Narrow)[4] <- "income_group"
write.csv(Narrow, "ScorecardSmallNarrow.csv", row.names=FALSE)
scorecard %>% na.omit() %>%
ggplot(aes(x=ADM_RATE, y=net_cost)) +
geom_point(alpha = 0.3, color="blue") +
facet_grid(CONTROL ~ income_group) +
geom_smooth(color="red") +
ylim(0, 50000) +
xlab("Admissions rate, %") +
ylab("Net cost per year, $'000")
scorecard <- Narrow
scorecard %>% na.omit() %>%
ggplot(aes(x=ADM_RATE, y=net_cost)) +
geom_point(alpha = 0.3, color="blue") +
facet_grid(CONTROL ~ income_group) +
geom_smooth(color="red") +
ylim(0, 50000) +
xlab("Admissions rate, %") +
ylab("Net cost per year, $'000")
scorecard %>%
ggplot(aes(x=ADM_RATE, y=net_cost)) +
geom_point(alpha = 0.3, color="blue") +
facet_grid(CONTROL ~ income_group) +
geom_smooth(color="red") +
ylim(0, 50000) +
xlab("Admissions rate, %") +
ylab("Net cost per year, $'000")
params
scorecard %>%
ggplot(aes(x=ADM_RATE, y=net_cost)) +
geom_point(alpha = 0.3, color="steelblue") +
facet_grid(CONTROL ~ income_group) +
geom_smooth(color="red") +
ylim(0, 50000) +
xlab("Admissions rate, %") +
ylab("Net cost per year, $'000")
scorecard %>%
ggplot(aes(x=ADM_RATE, y=net_cost)) +
geom_point(alpha = 0.3, color="steelblue") +
facet_grid(CONTROL ~ income_group) +
geom_smooth(color="red") +
ylim(0, 50000) +
xlab("Admissions rate, %") +
ylab("Net cost per year, $'000")
scorecard %>%
ggplot(aes(x=ADM_RATE, y=net_cost)) +
geom_point(alpha = 0.3, color="blue") +
facet_grid(CONTROL ~ income_group) +
geom_smooth(color="red") +
ylim(0, 50000) +
xlab("Admissions rate, %") +
ylab("Net cost per year, $'000")
p <-
scorecard %>%
ggplot(aes(x=ADM_RATE, y=net_cost)) +
geom_point(alpha = 0.3, color="blue") +
facet_grid(CONTROL ~ income_group) +
geom_smooth(color="red") +
ylim(0, 50000) +
xlab("Admissions rate, %") +
ylab("Net cost per year, $'000")
p
p + labs(title = "Average Net Cost per Year at U.S. Colleges")
p <- p + labs(title = "Average Net Cost per Year at U.S. Colleges")
p
p + labs(subtitle = "By income quintile")
library(tidyverse)
p <-
scorecard %>%
ggplot(aes(x=ADM_RATE, y=net_cost)) +
geom_point(alpha = 0.3, color="blue") +
facet_grid(CONTROL ~ income_group) +
geom_smooth(color="red") +
ylim(0, 50000) +
xlab("Admissions rate, %") +
ylab("Net cost per year, $'000")
p
p <- p + labs(title = "Average Net Cost per Year at U.S. Colleges")
p
p <- p + labs(subtitle = "By income quintile")
p
library(tidyverse)
scorecard %>%
ggplot(aes(x=ADM_RATE, y=net_cost)) +
geom_point(alpha = 0.3, color="blue") +
facet_grid(CONTROL ~ income_group) +
geom_smooth(color="red")
p <-
scorecard %>%
ggplot(aes(x=ADM_RATE, y=net_cost)) +
geom_point(alpha = 0.3, color="blue") +
facet_grid(CONTROL ~ income_group) +
geom_smooth(color="red") +
ylim(0, 50000) +
p
p <-
scorecard %>%
ggplot(aes(x=ADM_RATE, y=net_cost)) +
geom_point(alpha = 0.3, color="blue") +
facet_grid(CONTROL ~ income_group) +
geom_smooth(color="red") +
ylim(0, 50000)
p
p <- p + labs(title = "Average Net Cost per Year at U.S. Colleges")
p
p <- p + labs(subtitle = "By income quintile")
p
p + labs(x = "Admissions rate, %",
y = "Net cost per year, $'000")
scorecard %>%
ggplot(aes(x=ADM_RATE, y=net_cost, color=ADM_RATE)) +
geom_point(alpha = 0.3) +
facet_grid(CONTROL ~ income_group) +
geom_smooth(color="red") +
ylim(0, 50000)
scorecard %>%
ggplot(aes(x=ADM_RATE, y=net_cost, color=ADM_RATE)) +
geom_point(alpha = 0.3) +
facet_grid(CONTROL ~ income_group) +
geom_smooth(color="black") +
ylim(0, 50000)
scorecard %>%
ggplot(aes(x=ADM_RATE, y=net_cost, color=ADM_RATE)) +
geom_point(alpha = 0.3) +
facet_grid(CONTROL ~ income_group) +
geom_smooth(color="orange") +
ylim(0, 50000)
scorecard %>%
ggplot(aes(x=ADM_RATE, y=net_cost, color=ADM_RATE)) +
geom_point(alpha = 0.3) +
facet_grid(CONTROL ~ income_group) +
geom_smooth(color="darkorange") +
ylim(0, 50000)
scorecard %>%
ggplot(aes(x=ADM_RATE, y=net_cost, color=ADM_RATE)) +
geom_point(alpha = 0.3) +
facet_grid(CONTROL ~ income_group) +
geom_smooth(color="darkorange") +
ylim(0, 50000) +
labs(title = "Average Net Cost per Year at U.S. Colleges",
subtitle = "By income quintile",
x = "Admissions rate, %",
y = "Net cost per year, $'000",
color = "Admissions Rate")
scorecard %>%
ggplot(aes(x=ADM_RATE, y=net_cost, color=ADM_RATE)) +
geom_point(alpha = 0.3) +
facet_grid(CONTROL ~ income_group) +
geom_smooth(color="darkorange") +
ylim(0, 50000) +
labs(title = "Average Net Cost per Year at U.S. Colleges",
subtitle = "By income quintile",
x = "Admissions rate, %",
y = "Net cost per year, $'000",
color = "Admissions\nRate")
p <-
scorecard %>%
ggplot(aes(x=ADM_RATE, y=net_cost)) +
geom_point(alpha = 0.3, color="blue") +
facet_grid(CONTROL ~ income_group) +
geom_smooth(color="red") +
ylim(0, 50000)
p
library(babynames)
?babynames
head(babynames)
str(babynames)
tail(babynames)
baby_grouped <- group_by(sex)
baby_grouped <- group_by(babynames, sex)
baby_grouped %>% arrange(n)
baby_grouped %>% arrange(desc(n))
baby2014 <- filter(BabyNames)
?BabyNames
tail(BabyNames)
baby2014 <- filter(babynames, year == 2014)
baby2014 <- arrange(baby2014, desc(n))
head(baby2014)
head(baby2014, 10)
head(baby2014, 20)
temp <- head(baby2014, 20)
temp
temp <- head(baby2014, 10)
write.csv(temp, "top10babynames2014.csv", row.names=FALSE)
babynames <- temp
babynames %>%
ggplot(aes(x = name)) +
geom_bar()
babynames %>%
ggplot(aes(x = name, y = n)) +
geom_bar(stat = "identity")
babynames %>%
ggplot(aes(x = name, y = n, color = sex)) +
geom_bar(stat = "identity")
babynames %>%
ggplot(aes(x = name, y = n, fill = sex)) +
geom_bar(stat = "identity")
str(babynames)
babynames$name <- reorder(babynames$name, identity, n)
n
babynames$name <- reorder(babynames$name, identity, `n`)
babynames$name <- reorder(babynames$name, FUN = identity, babynames$n)
babynames %>%
ggplot(aes(x = name, y = n, fill = sex)) +
geom_bar(stat = "identity")
babynames$name <- reorder(babynames$name, FUN = function(x) -1* identity(x), babynames$n)
babynames %>%
ggplot(aes(x = name, y = n, fill = sex)) +
geom_bar(stat = "identity")
babynames %>%
ggplot(aes(x = name, y = n, fill = sex)) +
geom_bar(stat = "identity") + coord_flip()
babynames$name <- reorder(babynames$name, FUN = identity(x), babynames$n)
babynames$name <- reorder(babynames$name, FUN = identity, babynames$n)
babynames %>%
ggplot(aes(x = name, y = n, fill = sex)) +
geom_bar(stat = "identity") +
coord_flip()
babynames$name <- reorder(babynames$name, FUN = identity, babynames$n)
p2 <- babynames %>%
ggplot(aes(x = name, y = n, fill = sex)) +
geom_bar(stat = "identity") +
coord_flip()
p2 + scale_fill_manual(values = c("pink", "blue"))
p2 + scale_fill_manual(values = c("purple", "blue"))
p2 + scale_fill_manual(values = c("purple", "orange"))
p2 + scale_fill_manual(values = c("darkpink", "steelblue"))
p2 + scale_fill_manual(values = c("deeppink", "steelblue"))
babynames$name <- reorder(babynames$name, FUN = identity, babynames$n)
p2 <- babynames %>%
ggplot(aes(x = name, y = n, fill = sex)) +
geom_bar(stat = "identity") +
labs(x = NULL, y = "Count")
coord_flip()
p2 + scale_fill_manual(values = c("deeppink", "steelblue"))
babynames$name <- reorder(babynames$name, FUN = identity, babynames$n)
p2 <- babynames %>%
ggplot(aes(x = name, y = n, fill = sex)) +
geom_bar(stat = "identity") +
labs(x = NULL, y = "Count") +
coord_flip()
p2 + scale_fill_manual(values = c("deeppink", "steelblue"))
babynames$name <- reorder(babynames$name, FUN = identity, babynames$n)
p2 <- babynames %>%
ggplot(aes(x = name, y = n, fill = sex)) +
geom_bar(stat = "identity") +
labs(title = "Top 10 Baby Names of 2014", x = NULL, y = "Count") +
coord_flip()
p2 + scale_fill_manual(values = c("deeppink", "steelblue"))
p2 + scale_fill_virids(discrete = TRUE)
p2 + scale_fill_viridis(discrete = TRUE)
install.packages("viridis")
library(viridis)
p2 + scale_fill_viridis(discrete = TRUE)
p2 + scale_fill_brewer(pal = "Dark2")
?scale_fill_brewer
p2 + scale_fill_brewer(palette = "Dark2")
?RColorBrewer
RColorBrewer::display.brewer.all()
display.brewer.all()
RColorBrewer::display.brewer.all()
p2 + scale_fill_colorblind()
p + theme_economist()
p + theme_minimal()
p + theme_tufte()
p + theme_few()
p + theme_fivethirtyeight()
p + theme_wsj()
p + theme_hc()
p2
babynames %>%
ggplot(aes(x = name, y = n)) +
geom_bar(stat = "identity")
args(theme)
