"A" + "B"
balance <- 3125.89
chase_cc <- 202.67
car <- 397.01
cap1_cc <- 131.32
mort <- 513.99
citi_cc <- 837.54
wf_cc <- 135.51
sum(chase_cc, car, cap1_cc, mort, citi_cc, wf_cc)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
housePrices <- read.csv(url("https://sites.google.com/site/jrlhost/data/HousePriceSqftBeds.csv"))
str(housePrices)
ggplot(housePrices,aes(y=Price,x=sqft, col = log(beds))) +
geom_point() +
geom_smooth(method="lm",se=FALSE)
p <- ggplot(housePrices,aes(y=Price,x=sqft)) +
geom_point(shape=4) +
geom_smooth(method="lm",se=FALSE)
p
mod <- lm(Price ~ sqft + beds, data = housePrices)
str(mod)
p +
geom_points(mapping = aes(x = .sqft, y = .fitted))
p +
geom_point(mapping = aes(x = .sqft, y = .fitted))
p +
geom_point(mapping = aes(x = mod$model$sqft, y = mod$.fitted))
p +
geom_point(mapping = aes(x = housePrices$sqft, y = mod$.fitted))
model$.fitted
model$fitted
mod$fitted.values
p +
geom_point(mapping = aes(x = housePrices$sqft, y = mod$fitted))
p +
geom_point(mapping = aes(x = housePrices$sqft, y = mod$fitted), alpha = 0.5)
p + geom_point(mapping = aes(x = housePrices$sqft, y = mod$fitted), alpha = 0.5, color = "purple")
p + geom_point(mapping = aes(x = housePrices$sqft, y = mod$fitted), alpha = 0.5, color = "orange")
p + geom_point(mapping = aes(x = housePrices$sqft, y = mod$fitted), alpha = 0.2, color = "orange")
p + geom_point(mapping = aes(x = housePrices$sqft, y = mod$fitted), alpha = 0.5, color = "orange")
p + geom_point(mapping = aes(x = housePrices$sqft, y = mod$fitted), alpha = 0.5, color = factor(bedsAboveAvg))
p + geom_point(mapping = aes(x = housePrices$sqft, y = mod$fitted), alpha = 0.5, color = "orange")
housePrices$bedsAboveAvg <- ifelse(housePrices$beds>mean(housePrices$beds),"above Avg","below Avg")
ggplot(housePrices,aes(y=Price,x=sqft)) +
geom_point(aes(col=bedsAboveAvg)) + geom_smooth(method="lm",se=FALSE)
p + geom_point(mapping = aes(x = housePrices$sqft, y = mod$fitted), alpha = 0.5, color = factor(housePrices$bedsAboveAvg))
str(housePrices)
p + geom_point(mapping = aes(x = housePrices$sqft, y = mod$fitted), alpha = 0.5, color = factor(housePrices$bedsAboveAvg))
p + geom_point(mapping = aes(x = housePrices$sqft, y = mod$fitted), alpha = 0.5, color = housePrices$bedsAboveAvg)
p + geom_point(mapping = aes(x = housePrices$sqft, y = mod$fitted, color = housePrices$bedsAboveAvg), alpha = 0.5)
library(viridis)
p + geom_point(mapping = aes(x = housePrices$sqft, y = mod$fitted, color = housePrices$bedsAboveAvg), alpha = 0.5) +
scale_color_viridis(discrete = TRUE)
p + geom_point(mapping = aes(x = housePrices$sqft, y = mod$fitted, color = housePrices$bedsAboveAvg), alpha = 0.5) +
scale_color_viridis("Beds", discrete = TRUE)
?tidy
library(broom)
?tidy
tidy(fit)
fit <- lm(Price~sqft+beds, data = housePrices)
tidy(fit)
?kable
fit
kable(tidy(fit), digits = c(0, 2, 2, 2, 4))
kable(tidy(fit), digits = c(0, 2, 2, 2, 4))
library(knitr)
kable(tidy(fit), digits = c(0, 2, 2, 2, 4))
kable(tidy(fit))
?kable
kable(tidy(fit))
kable(tidy(fit), digits = 3)
pander(fit)
library(pander)
install.packages("pander")
pander(fit)
library(pander)
pander(fit)
pander(tidy(fit))
kable(tidy(fit))
kable(tidy(fit), digits = c(0, 2, 2, 2, 4))
augment(fit)
head(augment(fit))
glance(fit)
p + geom_point(mapping = aes(x = housePrices$sqft, y = mod$fitted, color = housePrices$bedsAboveAvg), alpha = 0.5) +
scale_color_manual("Beds", c("red", "blue"))
p + geom_point(mapping = aes(x = housePrices$sqft, y = mod$fitted, color = housePrices$bedsAboveAvg), alpha = 0.5) +
scale_color_manual("Beds", values = c("red", "blue"))
1:10
# You only need to install a package once
install.packages("tidyverse")
# You will need to load the package in each R markdown notebook
library(tidyverse)
# Load the data and assign it a name
movies <- read.csv("https://github.com/cmsc205/data/raw/master/movie_metadata.csv", as.is = TRUE)
# Printing the first 6 rows
# Note that missing values are denoted by NA
head(movies)
# Printing the last 6 rows
tail(movies)
# Looking at the number of rows and columns
dim(movies)
# Looking at the structure
str(movies)
# looking at the summary
summary(movies)
# Addition
3 + 5
# Subtraction
2 - 5
# Assign a name
x <- 3 + 5
# Multiplication
y <- x * 10
# Division
y/x
# Exponentiation
x^4
# Order of operations
1 + 2 * 3 * 4 * 5 / 6^3 + 7 + 8
1 + 2 * ((3 * 4 * 5 / 6)^3) + 7 + 8
movies$net <- (movies$gross - movies$budget) / 1e6
summary(movies$net)
