install.packages("randomForest")
library(tidyverse)
heart <- read.csv("http://www-bcf.usc.edu/~gareth/ISL/Heart.csv")[,-1]
heart <- na.omit(heart)
glimpse(heart)
set.seed(223)
train_index <- sample(1:nrow(heart), size = 200)
test_index <- setdiff(1:nrow(heart), train_index)
train <- heart[train_index,]
test <- heart[-train_index,]
library(rpart)
heart_tree <- rpart(AHD ~ ., data = train)
summary(heart_tree)
library(rpart.plot)
rpart.plot(heart_tree)
plot(tree(rpart(AHD ~ ., data = train)))
library(tree)
install.packages("tree")
library(tree)
plot(tree(rpart(AHD ~ ., data = train)))
?rpart
library(rpart)
heart_tree <- rpart(AHD ~ ., data = train)
table(prediction = predict(heart_tree, newdata = test, type = "class"), truth = test$AHD)
train_index2 <- sample(1:nrow(heart), size = 200)
test_index2 <- setdiff(1:nrow(heart), train_index)
train2 <- heart[train_index,]
test2 <- heart[-train_index,]
heart_tree2 <- rpart(AHD ~ ., data = train)
table(prediction = predict(heart_tree2, newdata = test, type = "class"), truth = test2$AHD)
heart_tree2 <- rpart(AHD ~ ., data = train)
table(prediction = predict(heart_tree2, newdata = test2, type = "class"), truth = test2$AHD)
heart_tree2 <- rpart(AHD ~ ., data = train)
table(prediction = predict(heart_tree2, newdata = test2, type = "class"), truth = test2$AHD)
train_index2 <- sample(1:nrow(heart), size = 200)
test_index2 <- setdiff(1:nrow(heart), train_index2)
train2 <- heart[train_index2,]
test2 <- heart[-train_index2,]
heart_tree2 <- rpart(AHD ~ ., data = train)
table(prediction = predict(heart_tree2, newdata = test2, type = "class"), truth = test2$AHD)
library(tidyverse)
heart <- read.csv("http://www-bcf.usc.edu/~gareth/ISL/Heart.csv")[,-1]
heart <- na.omit(heart)
glimpse(heart)
set.seed(223)
train_index <- sample(1:nrow(heart), size = 200)
test_index <- setdiff(1:nrow(heart), train_index)
train <- heart[train_index,]
test <- heart[-train_index,]
library(rpart)
heart_tree <- rpart(AHD ~ ., data = train)
table(prediction = predict(heart_tree, newdata = test, type = "class"), truth = test$AHD)
train_index2 <- sample(1:nrow(heart), size = 200)
test_index2 <- setdiff(1:nrow(heart), train_index2)
train2 <- heart[train_index2,]
test2 <- heart[-train_index2,]
heart_tree2 <- rpart(AHD ~ ., data = train)
table(prediction = predict(heart_tree2, newdata = test2, type = "class"), truth = test2$AHD)
set.seed(222)
train_index <- sample(1:nrow(heart), size = 200)
test_index <- setdiff(1:nrow(heart), train_index)
train <- heart[train_index,]
test <- heart[-train_index,]
library(rpart)
heart_tree <- rpart(AHD ~ ., data = train)
table(prediction = predict(heart_tree, newdata = test, type = "class"), truth = test$AHD)
train_index2 <- sample(1:nrow(heart), size = 200)
test_index2 <- setdiff(1:nrow(heart), train_index2)
train2 <- heart[train_index2,]
test2 <- heart[-train_index2,]
heart_tree2 <- rpart(AHD ~ ., data = train)
table(prediction = predict(heart_tree2, newdata = test2, type = "class"), truth = test2$AHD)
xtest <- test[,-14]
ytest <- test[,14]
results <- data.frame(ntrees = 1:300, oob.error = 0, test.error = 0)
for(i in 1:300) {
bag <- randomForest(AHD ~ ., data = heart, mtry = 13, ntree = i, xtest = xtest, ytest = ytest)
oob.conf <- bag$confusion[1:2, 1:2]
test.conf <- bag$test$confusion[1:2, 1:2]
results$oob.error[i] <- 1 - (sum(diag(oob.conf)) / sum(oob.conf))
results$test.error[i] <- 1 - (sum(diag(test.conf)) / sum(test.conf))
}
library(randomForest)
xtest <- test[,-14]
ytest <- test[,14]
results <- data.frame(ntrees = 1:300, oob.error = 0, test.error = 0)
for(i in 1:300) {
bag <- randomForest(AHD ~ ., data = heart, mtry = 13, ntree = i, xtest = xtest, ytest = ytest)
oob.conf <- bag$confusion[1:2, 1:2]
test.conf <- bag$test$confusion[1:2, 1:2]
results$oob.error[i] <- 1 - (sum(diag(oob.conf)) / sum(oob.conf))
results$test.error[i] <- 1 - (sum(diag(test.conf)) / sum(test.conf))
}
tree_pred <- predict(heart_tree, newdata = test, type = "class")
tree_error <- mean(tree_pred != test$AHD)
ggplot(results, aes(x = ntrees, y = oob.error)) +
geom_line() +
theme_minimal() +
lims(y = c(.1, .3)) +
labs(y = "Error", x = "Number of trees")
head(tree_error)
?Tree
?tree
?rpart
heart_tree
heart_tree$cptable
rf_results <- data.frame(ntrees = 1:300, oob.error = 0, test.error = 0)
for(i in 1:300) {
bag <- randomForest(AHD ~ ., data = heart, ntree = i, xtest = xtest, ytest = ytest)
oob.conf <- bag$confusion[1:2, 1:2]
test.conf <- bag$test$confusion[1:2, 1:2]
rf_results$oob.error[i] <- 1 - (sum(diag(oob.conf)) / sum(oob.conf))
rf_results$test.error[i] <- 1 - (sum(diag(test.conf)) / sum(test.conf))
}
ggplot(results, aes(x = ntrees, y = oob.error)) +
geom_line() +
geom_line(data = rf_results, aes(x = ntrees, y = oob.error), color = "dodgerblue") +
theme_minimal() +
lims(y = c(.1, .3)) +
labs(y = "Error", x = "Number of trees")
ggplot(results, aes(x = ntrees, y = oob.error)) +
geom_line() +
geom_line(data = rf_results, aes(x = ntrees, y = oob.error), color = "dodgerblue") +
geom_line(data = rf_results, aes(x = ntrees, y = test.error), color = "dodgerblue", linetype = 2) +
theme_minimal() +
lims(y = c(.1, .3)) +
labs(y = "Error", x = "Number of trees")
head(rf_results)
tail(rf_results)
ggplot(results, aes(x = ntrees, y = oob.error)) +
geom_line(color = "darkorange") +
geom_line(data = rf_results, aes(x = ntrees, y = oob.error), color = "dodgerblue") +
theme_minimal() +
lims(y = c(.1, .3)) +
labs(y = "Error", x = "Number of trees")
ggplot(results, aes(x = ntrees, y = oob.error)) +
geom_line(color = "#4daf4a") +
geom_line(data = rf_results, aes(x = ntrees, y = oob.error), color = "#377eb8") +
theme_minimal() +
lims(y = c(.1, .3)) +
labs(y = "Error", x = "Number of trees")
ggplot(results, aes(x = ntrees, y = oob.error)) +
geom_line(color = "#d95f02") +
theme_minimal() +
lims(y = c(.1, .3)) +
labs(y = "Error", x = "Number of trees")
View(results)
ggplot(results, aes(x = ntrees, y = oob.error)) +
geom_line(color = "OOB: Bagging") +
geom_line(data = rf_results, aes(x = ntrees, y = oob.error), color = "OOB: RF") +
theme_minimal() +
lims(y = c(.1, .3)) +
labs(y = "Error", x = "Number of trees") +
scale_colour_manual(name = "Method", values = c("#d95f02", "#1b9e77"))
ggplot(results, aes(x = ntrees, y = oob.error)) +
geom_line(aes(color = "OOB: Bagging")) +
geom_line(data = rf_results, aes(x = ntrees, y = oob.error, color = "OOB: RF")) +
theme_minimal() +
lims(y = c(.1, .3)) +
labs(y = "Error", x = "Number of trees") +
scale_colour_manual(name = "Method", values = c("#d95f02", "#1b9e77"))
ggplot(results, aes(x = ntrees, y = oob.error)) +
geom_line(aes(color = "OOB: Bagging")) +
geom_line(data = rf_results, aes(x = ntrees, y = oob.error, color = "OOB: RF")) +
theme_minimal() +
lims(y = c(.1, .3)) +
labs(y = "Error", x = "Number of trees") +
scale_colour_manual(name = "Method", values = c("#d95f02", "#1b9e77")) +
theme(legend.position="bottom")
?tree
?tree
library(rpart)
heart_tree <- rpart(AHD ~ ., data = train, control = rpart.control(minsplit = 5, minbucket = 10))
table(prediction = predict(heart_tree, newdata = test, type = "class"),
truth = test$AHD)
heart_tree2 <- rpart(AHD ~ ., data = train, control = rpart.control(minsplit = 5, minbucket = 10))
table(prediction = predict(heart_tree2, newdata = test2, type = "class"),
truth = test2$AHD)
library(tidyverse)
heart <- read.csv("http://www-bcf.usc.edu/~gareth/ISL/Heart.csv")[,-1]
heart <- na.omit(heart)
glimpse(heart)
set.seed(222)
train_index <- sample(1:nrow(heart), size = 200)
test_index <- setdiff(1:nrow(heart), train_index)
train <- heart[train_index,]
test <- heart[-train_index,]
library(rpart)
heart_tree <- rpart(AHD ~ ., data = train, control = rpart.control(minsplit = 5, minbucket = 10))
table(prediction = predict(heart_tree, newdata = test, type = "class"),
truth = test$AHD)
train_index2 <- sample(1:nrow(heart), size = 200)
test_index2 <- setdiff(1:nrow(heart), train_index2)
train2 <- heart[train_index2,]
test2 <- heart[-train_index2,]
heart_tree2 <- rpart(AHD ~ ., data = train, control = rpart.control(minsplit = 5, minbucket = 10))
table(prediction = predict(heart_tree2, newdata = test2, type = "class"),
truth = test2$AHD)
heart_tree2
heart_tree$cptable
tree_pred <- predict(heart_tree, newdata = test, type = "class")
tree_error <- mean(tree_pred != test$AHD)
tree_error
sqrt(13)
?randomForest
# By default, mtry = sqrt(p)
heart_rf <- randomForest(AHD ~ ., data = heart)
heart_rf
table(heart$AHD)
ahd_tab["No"] / sum(ahd_tab)
ahd_tab <- table(heart$AHD)
ahd_tab
ahd_tab["No"] / sum(ahd_tab)
ahd_tab["Yes"] / sum(ahd_tab)
?randomForest
varImpPlot(heart_rf)
varImpPlot(heart_rf)
importance(heart_rf)
heart_rf$importance
82000/12
138500 - 117000
(138500 - 117000) - 2000
(138500 - 117000) - .06 * 138500
